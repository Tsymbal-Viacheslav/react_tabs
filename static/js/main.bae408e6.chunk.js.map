{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","Select","selectedTabId","selectedTab","className","map","tab","classNames","id","onClick","href","title","content","App","useState","setSelectedTabId","find","value","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEA,OACE,qCACE,qBAAKC,UAAU,gBAAf,SACE,oBAAIA,UAAU,OAAd,SACGJ,EAAKK,KAAI,SAAAC,GACR,OACE,oBACEF,UACEG,IACE,GACA,CAAE,YAAaD,EAAIE,KAAON,IAJhC,SASE,mBACEO,QAAS,kBAAMH,EAAIE,KAAON,GAAiBD,EAAOK,EAAIE,KACtDE,KAAI,WAAMJ,EAAIE,IAFhB,SAIGF,EAAIK,SANFL,EAAIE,WAcnB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,SACGD,GAAeA,EAAYS,cCxCvBZ,EAAO,CAClB,CAAEQ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOZ,EAAP,KAAsBa,EAAtB,KAEMZ,EAAcH,EAAKgB,MAAK,SAAAV,GAAG,OAAIA,EAAIE,KAAON,KAMhD,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,0CACsBD,QADtB,IACsBA,OADtB,EACsBA,EAAaQ,SAGnC,8BACE,cAAC,EAAD,CACEX,KAAMA,EACNC,OAbc,SAACgB,GACrBF,EAAiBE,IAaXf,cAAeA,EACfC,YAAaA,UC1BvBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bae408e6.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../Tabs';\n\ntype Props = {\n  tabs: Tab[],\n  Select: (value: string) => void,\n  selectedTabId: string,\n  selectedTab: Tab | undefined,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  Select,\n  selectedTabId,\n  selectedTab,\n}) => {\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul className=\"list\">\n          {tabs.map(tab => {\n            return (\n              <li\n                className={\n                  classNames(\n                    '',\n                    { 'is-active': tab.id === selectedTabId },\n                  )\n                }\n                key={tab.id}\n              >\n                <a\n                  onClick={() => tab.id === selectedTabId || Select(tab.id)}\n                  href={`#${tab.id}`}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab && selectedTab.content}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId);\n\n  const onTabSelected = (value: string) => {\n    setSelectedTabId(value);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <div>\n        <Tabs\n          tabs={tabs}\n          Select={onTabSelected}\n          selectedTabId={selectedTabId}\n          selectedTab={selectedTab}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}